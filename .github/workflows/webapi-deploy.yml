name: Web API Deployment

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    name: "Build and Test"

    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Configure environment variables
        run: |
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo DB_USERNAME=${{ secrets.DB_USERNAME }} >> .env
          echo DB_PASSWORD=${{ secrets.DB_PASSWORD }} >> .env
          echo ENVIRONMENT=${{ vars.ENVIRONMENT_STAGE }} >> .env

          cat .env

      - name: Create artifact
        run: zip -r app.zip . --exclude '.git/*'

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: app
          path: app.zip

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test
  
  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-test]

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
    
      - name: Check if EC2 instance exists
        id: ec2-check
        run: |
          INSTANCE_ID=$(aws ec2 describe-instances \
            --filters "Name=dns-name,Values=${{ secrets.EC2_PUBLIC_IP }}" \
            --query "Reservations[*].Instances[*].InstanceId" \
            --output text)

          if [[ -z "$INSTANCE_ID" ]]; then
            echo "No EC2 instance found with public IP ${{ secrets.EC2_PUBLIC_IP }}"
            exit 1
          else
            echo "EC2 instance with ID $INSTANCE_ID found"
          fi

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: app

      - name: Setup SSH agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: |
            ${{ secrets.EC2_SSH_KEY }}

      - name: Copy files to EC2 instance
        run: scp -o StrictHostKeyChecking=no app.zip ubuntu@${{ secrets.EC2_PUBLIC_IP }}:/home/ubuntu/

      - name: SSH into EC2 and Deploy
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.EC2_PUBLIC_IP }} << 'EOF'
          
          # Unzip the app files
          echo "Unzipping the new files..."
          unzip -o /home/ubuntu/app.zip -d /home/ubuntu/app
          rm -rf /home/ubuntu/app.zip
      
          # Change directory to app folder
          cd /home/ubuntu/app
      
          # Install Node.js dependencies
          echo "Installing Node.js dependencies."
          npm install
      
          # Restart the Node.js app using PM2
          if pm2 list | grep -q "web-api"; then
            echo "Stopping existing web-api..."
            pm2 stop web-api
          fi
      
          echo "Starting the new web-api..."
          pm2 start server.js --name web-api --env production
          
          exit 0
          EOF

